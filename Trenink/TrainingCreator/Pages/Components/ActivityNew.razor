@using Microsoft.AspNetCore.Components
@using TrainingCreator.Models
@using TrainingDataAccess.Models
@using TrainingDataAccess.Services.ActivityServices
@using TrainingDataAccess.Services.TagServices
@inject IActivityService ActivityService
@inject ITagService TagService
@inject ISnackbar Snackbar

<EditForm Model="@Activity" OnValidSubmit="@Submit">
    <DataAnnotationsValidator />

    <MudDialog>
        <DialogContent>
            <MudGrid >
                <MudItem xs="12" sm="7">
                    <MudCard>
                        <MudCardContent>
                            <MudTextField Label="Název" @bind-Value="Activity.Name" For="() => Activity.Name" HelperText="Alespoň 2 znaky"  HelperTextOnFocus="true"/>
                            <MudTextField Label="Popis" @bind-Value="Activity.Description" For="() => Activity.Description" Lines="15"/>
                            <MudPaper Class="flex-none " Width="240px" MinHeight="100px" Elevation="0">
                                <MudCard Elevation="0">
                                    <MudCardActions>
                                        <MudPaper Class="d-flex flex-wrap gap-1" MaxWidth="528px" Elevation="0">
                                            @foreach (var tag in Activity.Tags ??= new List<Tag>())
                                            {
                                                <MudChip Size="Size.Small" Text="@tag.Name" Value="tag.TagId" Style="@($"background-color:{tag.Color}; color:white;")" OnClick="@(() => RemoveTag(tag))" />
                                            }
                                        </MudPaper>
                                    </MudCardActions>
                                </MudCard>
                            </MudPaper>
                        </MudCardContent>
                        <MudCardActions>
                            <MudButton ButtonType="ButtonType.Button" Variant="Variant.Filled" Color="Color.Primary" OnClick="@Cancel">Cancel</MudButton>
                            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" >OK</MudButton>
                        </MudCardActions>
                    </MudCard>
                </MudItem>
            </MudGrid>
        </DialogContent>
    </MudDialog>
    
    <TagsList Tags="_tags" Action="@(AddTag)" />

</EditForm>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = null!;
    [Parameter] public Activity Activity { get; set; } = new Activity();

    List<Tag> _tags = new List<Tag>();

    protected override async Task OnInitializedAsync()
    {
        _tags = await TagService.GetAllTags();
    }

    public void AddTag(Tag tag)
    {
        Activity.Tags?.Add(tag);
        _tags.Remove(tag);

        StateHasChanged();
    }

    public void RemoveTag(Tag tag)
    {
        Activity.Tags?.Remove(tag);
        _tags.Add(tag);
        StateHasChanged();
    }

    protected async Task Submit()
    {
        StateHasChanged();

        try
        {
            await ActivityService.CreateActivity(Activity);
            MudDialog.Close(DialogResult.Ok(Activity));

        }
        catch (Exception x)
        {
            Snackbar.Add($"Chyba {x.Message}", Severity.Error);

        }
    }

    void Cancel() => MudDialog.Cancel();
}
