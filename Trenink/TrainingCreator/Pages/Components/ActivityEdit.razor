@using TrainingDataAccess.Services.ActivityServices
@using Microsoft.AspNetCore.Components
@using TrainingDataAccess.Models
@using TrainingDataAccess.Services.TagServices
@inject IActivityService ActivityService
@inject ITagService TagService
@inject ISnackbar Snackbar

<link href="https://use.fontawesome.com/releases/v5.14.0/css/all.css" rel="stylesheet">

<div class="d-flex flex-grow-1 gap-1">
    <MudPaper Class="flex-auto d-flex py-8 " Width="80%" Elevation="0">
        <EditForm Model="@Activity" OnValidSubmit="@Submit" >
            <DataAnnotationsValidator />
            <MudDialog >
                <DialogContent>
                            <MudCard>
                                <MudCardContent>
                            <MudTextField Label="Název" @bind-Value="Activity.Name" For="() => Activity.Name" HelperText="Alespoň 3 znaky" HelperTextOnFocus="true" />
                            <MudTextField Label="Popis" @bind-Value="Activity.Description" For="() => Activity.Description" Lines="15" />
                                    <MudPaper Class="flex-none " Width="240px" MinHeight="100px" Elevation="0">
                                        <MudCard Elevation="0">
                                            <MudCardHeader>
                                        <MudIcon Icon="fas fas-thin fa-tags" Size="Size.Small" />
                                            </MudCardHeader>
                                            <MudCardActions>
                                                <MudPaper Class="d-flex flex-wrap gap-1" MaxWidth="528px" Elevation="0">
                                                    @foreach (var tag in Activity.Tags ??= new List<Tag>())
                                                    {
                                                        <MudChip Size="Size.Small" Text="@tag.Name" Value="tag.TagId" Style="@($"background-color:{tag.Color}; color:white;")" OnClick="@(() => RemoveTag(tag))"/>
                                                    }
                                                </MudPaper>
                                            </MudCardActions>
                                        </MudCard>
                                    </MudPaper>


                                </MudCardContent>
                                <MudCardActions>
                                    <MudButton ButtonType="ButtonType.Reset" Variant="Variant.Filled" Color="Color.Primary" OnClick="@Cancel">Cancel</MudButton>
                                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" >OK</MudButton>
                                </MudCardActions>
                            </MudCard>
                </DialogContent>
            </MudDialog>
        </EditForm>
    </MudPaper>

    <MudDivider Vertical="true" FlexItem="true" />

    <TagsList Tags="_tags" Action="@(AddTag)" />
    
</div>

@code {
    [CascadingParameter]
    public MudDialogInstance MudDialog { get; set; } = null!;

    [Parameter] public Activity Activity { get; set; } = new Activity();

    

    private List<Tag> _tags = new List<Tag>();

    protected override async Task OnInitializedAsync()
    {

        Activity = await ActivityService.GetActivity(Activity.ActivityId);
        _tags = await TagService.GetAllTags();


        _tags = _tags.Except(Activity.Tags, new TagComparer()).ToList();
    }

    public void AddTag(Tag tag)
    {
        Activity.Tags.Add(tag);
        _tags.Remove(tag);

        StateHasChanged();
    }

    public void RemoveTag(Tag tag)
    {
        Activity.Tags.Remove(tag);
        _tags.Add(tag);
        StateHasChanged();
    }

    protected async Task Submit()
    {
        try
        {
            await ActivityService.UpdateActivity(Activity);
            MudDialog.Close(DialogResult.Ok(Activity));

        }
        catch (Exception x)
        {
            Snackbar.Add($"Chyba {x.Message}", Severity.Error);

        }
    }

    void Cancel()
    {
        MudDialog.Cancel();
    } 
}
