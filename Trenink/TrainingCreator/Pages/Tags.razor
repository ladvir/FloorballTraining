@page "/tags"
@using TrainingDataAccess.Models
@using TrainingDataAccess.Services.TagServices

@inject ITagService TagService
@inject ISnackbar Snackbar

@if (_tags is null)
{
    <p><em>Načítám...</em></p>
}
else
{
    <MudTable Items="@_tags" Dense="true" Hover="true" CanCancelEdit="true" Filter="new Func<TagDto,bool>(FilterFunc)"
          @bind-SelectedItem="_selectedItem1" SortLabel="Setřídit podle" CommitEditTooltip="Uložit úpravy"
          RowEditPreview="BackupItem" RowEditCancel="ResetItemToOriginalValues"
          RowEditCommit="Commit" IsEditRowSwitchingBlocked="true" Elevation="0" RowsPerPage="50"
          >
        <ToolBarContent>
            <MudText Typo="Typo.h6" Class="ma-1">Štítky</MudText>
            <MudButton OnClick=@AddEmptyTag>+</MudButton>
            <MudTextField @bind-Value="_searchString" Placeholder="Hledej" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Small" Class="mt-0"></MudTextField>
        </ToolBarContent>
        <ColGroup>
            <col style="width: 20%;" />
            <col style="width: 150px;"/>
            <col/>
            <col />
        </ColGroup>
        <HeaderContent>
            <MudTh><MudTableSortLabel SortBy="new Func<Tag, object>(x => x.Name!)">Název</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<Tag, object>(x => x.Color!)">Barva</MudTableSortLabel></MudTh>
            <MudTh>Náhled</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Název">@context.Name</MudTd>
            <MudTd DataLabel="Složka">@context.ParentTagId</MudTd>
            <MudTd DataLabel="Barva">@context.Color</MudTd>
            <MudTd DataLabel="Náhled">
                <MudChip Size="Size.Small" Text="@context.Name" Value="context.TagId" Style="@($"background-color:{context.Color}; color:white;")" />
            </MudTd>
        </RowTemplate>
        <RowEditingTemplate>
            <MudTd DataLabel="Název">
                <MudTextField @bind-Value="@context.Name" Required MaxLength="20" />
            </MudTd>
            <MudTh>
               
            </MudTh>

            <MudTd DataLabel="Barva">
                <MudColorPicker @bind-Text="context.Color" ColorPickerView="ColorPickerView.Palette" />
            </MudTd>
            <MudTd DataLabel="Náhled">
                <MudChip Size="Size.Small" Text="@context.Name" Value="context.TagId" Style="@($"background-color:{context.Color}; color:white;")" />
            </MudTd>
        </RowEditingTemplate>
        <PagerContent>
            <MudTablePager />
        </PagerContent>
    </MudTable>
@code {

    private List<TagDto> _tags = new List<TagDto>();
    
    private string _searchString = "";
    private TagDto _selectedItem1 = null!;
    private TagDto _tagBeforeEdit =null!;
    
    protected override async Task OnInitializedAsync()
    {
        _tags = await TagService.GetAllTags();
    }


    private void AddEmptyTag()
    {
        try
        {
            _tags.Add(new TagDto(_searchString));
        }
        catch (Exception x)
        {
            throw;
        }
    }

    private void BackupItem(object tag)
    {
        _tagBeforeEdit = new()
        {
                Name = ((TagDto)tag).Name
        };
    }
    
    private async void Commit(object obj)
    {
        var tag = (TagDto)obj;
        if (tag.TagId == 0)
        {
            await TagService.CreateTag(tag);
            return;
        }

        await TagService.UpdateTag(tag);
        
    }

    private void ResetItemToOriginalValues(object tag)
    {
        ((TagDto)tag).Name = _tagBeforeEdit.Name;
    }

    private bool FilterFunc(TagDto tag)
    {
        if (string.IsNullOrWhiteSpace(_searchString))
            return true;
        if (tag.Name!.Contains(_searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }


}

}
