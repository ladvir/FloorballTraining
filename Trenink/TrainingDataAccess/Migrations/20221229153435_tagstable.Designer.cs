// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrainingDataAccess.DbContexts;

#nullable disable

namespace TrainingDataAccess.Migrations
{
    [DbContext(typeof(TrainingDbContext))]
    [Migration("20221229153435_tagstable")]
    partial class tagstable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.1");

            modelBuilder.Entity("TrainingDataAccess.Models.Activity", b =>
                {
                    b.Property<int>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("PersonsMax")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PersonsMin")
                        .HasColumnType("INTEGER");

                    b.HasKey("ActivityId");

                    b.ToTable("Activity");
                });

            modelBuilder.Entity("TrainingDataAccess.Models.Tag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ActivityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TagId");

                    b.HasIndex("ActivityId");

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("TrainingDataAccess.Models.Tag", b =>
                {
                    b.HasOne("TrainingDataAccess.Models.Activity", null)
                        .WithMany("Tags")
                        .HasForeignKey("ActivityId");
                });

            modelBuilder.Entity("TrainingDataAccess.Models.Activity", b =>
                {
                    b.Navigation("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
