@page "/editclub/{clubId:int}"
@using FloorballTraining.UseCases.Clubs.Interfaces
@inject IEditClubUseCase EditClubUseCase
@inject IDeleteClubUseCase DeleteClubUseCase

@inject IViewClubByIdUseCase ViewClubByIdUseCase

@inject NavigationManager NavigationManager

<MudText Typo="Typo.h4">Klub</MudText>

<EditForm Model="@_club" OnValidSubmit="Submit">
    <DataAnnotationsValidator/>
    <MudPaper Elevation="0" Class="d-inline-flex flex-wrap gap-4">
        <MudTextField Label="Název" @bind-Value="_club.Name" For="() => _club.Name" Style="width:22em;" />
        
        <MudTextField T="int" Value="_club.Members.Count()"/>
        <MudTextField T="string" Value="string.Join(',', _club.Teams.Select(t=>t.Name))" />

       
        <MudSpacer/>
        <MudChip Icon="@Icons.Material.Filled.Delete" Variant="Variant.Outlined" Color="Color.Error" OnClick="()=> _isDialogForDeletionVisible = true">Odstranit</MudChip>
        
    </MudPaper>

    @*Buttons*@
    <MudPaper Elevation="0" Class="d-inline-flex my-2">
        <MudButton ButtonType="ButtonType.Button" Variant="Variant.Filled" Color="Color.Primary" OnClick="Cancel">Cancel</MudButton>
        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" @onkeypress:preventDefault>OK</MudButton>
    </MudPaper>
</EditForm>

<MudDialog @bind-ref="_deleteConfirmationDialog" @bind-IsVisible="_isDialogForDeletionVisible" Options="_dialogOptions">
    <TitleContent>
        <MudText Typo="Typo.h6"><MudIcon Icon="@Icons.Material.Filled.Delete" Class="mr-3" />Smazání klubu</MudText>
    </TitleContent>
    <DialogContent>
        <p>Opravdu chcete <strong>smazat</strong> klub <strong>@_club.Name</strong>?</p>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="() => _isDialogForDeletionVisible = false" Class="px-10">Ne</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="DeleteClub" Class="px-10">Ano</MudButton>
    </DialogActions>
</MudDialog>


@code {
    [Parameter]
    public int ClubId { get; set; }

    private ClubDto _club = new();

    
    private MudDialog? _deleteConfirmationDialog;
    private bool _isDialogForDeletionVisible;
    private readonly DialogOptions _dialogOptions = new()
        {
            NoHeader = false,
            CloseOnEscapeKey = true,
            CloseButton = true,
            DisableBackdropClick = true,
            MaxWidth = MaxWidth.Small,
            Position = DialogPosition.Center,
            FullScreen = false
        };

    protected override async Task OnParametersSetAsync()
    {
        _club = await ViewClubByIdUseCase.ExecuteAsync(ClubId);
    }

    protected override  void OnInitialized()
    {
        
    }

    private async Task Submit()
    {
        await EditClubUseCase.ExecuteAsync(_club);
        NavigationManager.NavigateTo("/clubs");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/clubs");
    }

    private async Task DeleteClub()
    {
        _isDialogForDeletionVisible = false;

        await DeleteClubUseCase.ExecuteAsync(_club.Id);

        NavigationManager.NavigateTo("/Clubs");
    }

}
