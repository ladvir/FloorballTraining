@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@using FloorballTraining.CoreBusiness
@using FloorballTraining.WebApp.Services
@using AlignItems = Radzen.AlignItems
@using ButtonType = Radzen.ButtonType
@using DialogService = Radzen.DialogService
@using Orientation = Radzen.Orientation
@using Variant = Radzen.Variant
@inject DialogService DialogService
@inject ContextMenuService ContextMenuService
@inject TooltipService TooltipService
@inject NotificationService NotificationService
@inject Microsoft.Extensions.Localization.IStringLocalizer<ResetPassword> L

<PageTitle>Reset password</PageTitle>
<RadzenRow>
    <RadzenColumn SizeMD="12">
        <RadzenTemplateForm Data="@user" TItem="ApplicationUser"
            Visible="@(user != null)" Submit="@FormSubmit">
            <RadzenAlert Shade="Radzen.Shade.Lighter" Variant="Radzen.Variant.Flat" Size="Radzen.AlertSize.Small" AlertStyle="Radzen.AlertStyle.Danger" Visible="@errorVisible">@error</RadzenAlert>
            
            <RadzenRow style="margin-bottom: 1rem">
                <RadzenColumn SizeMD="4">
                    <RadzenLabel Component="userName" style="width: 100%" Text="Email" />
                </RadzenColumn>
                <RadzenColumn SizeMD="8">
                    <RadzenTextBox style="display: block; width: 100%" @bind-Value="@(user.Email)"
                        Name="UserName" />
                    <RadzenRequiredValidator Component="UserName" Text="Email is required" />
                </RadzenColumn>
            </RadzenRow>
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End" Gap="0.5rem">
                    <RadzenButton ButtonType="ButtonType.Submit" Icon="save" Text="Reset" IsBusy="@isBusy" BusyText="Resetting ..." Variant="Variant.Flat" />
                    <RadzenButton ButtonStyle="ButtonStyle.Light" Text="Cancel" Click="@CancelClick" Variant="Variant.Flat" />
            </RadzenStack>
        </RadzenTemplateForm>
    </RadzenColumn>
</RadzenRow>
@code {
        protected ApplicationUser user;
        protected bool isBusy;
        protected bool errorVisible;
        protected string error;

        [Inject]
        protected SecurityService Security { get; set; }

        protected override async Task OnInitializedAsync()
        {
            user = new ApplicationUser();
        }

        protected async Task FormSubmit()
        {
            try
            {
                isBusy = true;

                await Security.ResetPassword(user.Email);

                DialogService.Close(true);
            }
            catch (Exception ex)
            {
                errorVisible = true;
                error = ex.Message;
            }

            isBusy = false;
        }

        protected async Task CancelClick()
        {
            DialogService.Close(false);
        }
}
