@inject AppSettings AppSettings
<MudDialog Style="max-height:100vh; overflow:scroll;">
    <DialogContent>
        <AddActivityComponent OnActivityAdded="SelectActivity"/>
        
        
        <MudGrid>
            <MudItem xxl="2" xl="3" lg="3" md="4" sm="12" xs="12">
                <MudPaper Elevation="0" Class="d-flex  mud-width-full py-8">
                    <SearchActivityComponent SearchCriteria="@SearchCriteria" DurationMax="AppSettings.MaxActivityDuration" PersonsMax="@AppSettings.MaximalPersons" OnSearchItem="SetCriteria"/>
                </MudPaper>
            </MudItem>
            <MudItem xxl="10" xl="9" lg="9" md="8" sm="12" xs="12">
                <MudPaper Elevation="0" Class="d-flex py-8">
                    <ActivitySelectionListComponent SearchCriteria="@SearchCriteria" SelectedActivity="@SelectedActivity" OnActivitySelectionChanged="SelectActivity" />
                </MudPaper>
            </MudItem>
        </MudGrid>
       
    </DialogContent>
    <DialogActions>
        <MudPaper Class="align-content-center pa-2" Elevation="0"> 
            <MudButton ButtonType="ButtonType.Button" Variant="Variant.Filled" Color="Color.Error" OnClick="Close">Zruš</MudButton>
            <MudButton ButtonType="ButtonType.Button" Variant="Variant.Filled" Color="Color.Success" OnClick="ConfirmSelection">OK</MudButton>
        </MudPaper>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; } = new();

    [Parameter]
    public SearchCriteria SearchCriteria { get; set; } = new ();
    
    public ActivityDto? SelectedActivity { get; set; } 
    
    
    
    void ConfirmSelection()
    {

        var result = DialogResult.Ok(SelectedActivity, SelectedActivity?.GetType());
        MudDialog.Close(result);
    }

    void Close()
    {
        MudDialog.Close(DialogResult.Cancel());
    }

    private void SetCriteria(SearchCriteria searchCriteria)
    {
        SearchCriteria = searchCriteria;


        StateHasChanged();
    }

    private void SelectActivity(ActivityDto activity)
    {
        SelectedActivity = activity;
        ConfirmSelection();
    }

}




