
@inject IConfiguration Configuration
@inject NavigationManager NavigationManager;

    <MudPaper Elevation="0" Class="d-inline-flex flex-wrap gap-2 mx-2" >

        @* Název *@
        <MudPaper Elevation="0" Class="d-block mud-width-full my-1 ">
            <MudText Typo="Typo.h4">@Activity.Name</MudText>
        </MudPaper>

        @* Doba trvání *@
        <MudPaper Elevation="0" Class="my-1 border-1 rounded-3 pa-2" Style="width:max-content">
            <MudPaper Elevation="0" Class="d-flex gap-2">
                <MudIcon Icon="@Icons.Material.Filled.Timelapse" />
                <MudText Typo="Typo.h6">Doba trvání</MudText>
            </MudPaper>
            <MudPaper Elevation="0" Class="text-center justify-center ">
                <MudText>@Duration</MudText>
            </MudPaper>
        </MudPaper>

        @* Intenzita *@
        <MudPaper Elevation="0" Class="my-1 border-1 rounded-3 pa-2" Style="width:max-content">
            <MudPaper Elevation="0" Class="d-flex gap-2">
                <MudIcon Icon="@Icons.Material.Filled.Accessibility" />
                <MudText Typo="Typo.h6">Intenzita</MudText>
            </MudPaper>
            <MudPaper Elevation="0" Class="text-center justify-center ">
                <MudText>@Intensities.Descriptions[Activity.Intensity]</MudText>
            </MudPaper>
        </MudPaper>

        @* Obtížnost *@
        <MudPaper Elevation="0" Class="my-1 border-1 rounded-3 pa-2" Style="width:max-content">
            <MudPaper Elevation="0" Class="d-flex gap-2">
                <MudIcon Icon="@Icons.Material.Filled.Done" />
                <MudText Typo="Typo.h6">Obtížnost</MudText>
            </MudPaper>
            <MudPaper Elevation="0" Class="text-center justify-center ">
                <MudText>@Difficulties.Descriptions[Activity.Difficulty]</MudText>
            </MudPaper>
        </MudPaper>

        @*Osoby*@
        <MudPaper Elevation="0" Class="my-1 border-1 rounded-3 pa-2" Style="width:max-content">
            <MudPaper Elevation="0" Class="d-flex gap-2">
                <MudIcon Icon="@Icons.Material.Filled.People" />
                <MudText Typo="Typo.h6">Počet osob</MudText>
            </MudPaper>
            <MudPaper Elevation="0" Class="text-center justify-center ">
                <MudText>@Persons</MudText>
            </MudPaper>
        </MudPaper>

        @* Věkové kategorie *@
        <MudPaper Elevation="0" Class="my-1 border-1 rounded-3 pa-2" Style="width:max-content">
            <MudPaper Elevation="0" Class="d-flex gap-2">
                <MudIcon Icon="@Icons.Material.Filled.FamilyRestroom" />
                <MudText Typo="Typo.h6">Věkové kategorie</MudText>
            </MudPaper>
            <MudText>@(string.Join(", ", Activity.ActivityAgeGroups.Select(ag => ag.AgeGroup?.Name).OrderBy(ag => ag)))</MudText>
        </MudPaper>

        @*Vybaveni*@
        @if (SelectedEquipments.Any())
        {
            <MudPaper Elevation="0" Class="my-1 border-1 rounded-4 pa-2" Style="width:max-content">
                <MudPaper Elevation="0" Class="d-flex gap-2 mb-2">
                <MudIcon Icon="fas fa-thin fa-clipboard-list" />
                <MudText Typo="Typo.h6">Vybavení</MudText>
            </MudPaper>
            <MudText>@(string.Join(", ", SelectedEquipments.Select(e => e?.Name)))</MudText>
        </MudPaper>
        }

        @*Stitky*@
        <MudPaper Elevation="0" Class="my-1 border-1 rounded-3 pa-2" Style="width:max-content">
            <MudPaper Elevation="0" Class="d-flex gap-2">
                <MudIcon Icon="fas fa-thin fa-tag" />
                <MudText Typo="Typo.h6">Štítky</MudText>
            </MudPaper>
            <MudText Style="max-width: 6cm; text-wrap: normal;">@(string.Join(", ", SelectedTags.Select(e => e?.Name)))</MudText>
        </MudPaper>

        @*Odkazy*@
        @if (SelectedMedium.Any(m => m is { MediaType: MediaType.URL }))
        {
            <MudPaper Elevation="0" Class="my-1 border-1 rounded-3 pa-2" Style="width:max-content">
                <MudPaper Elevation="0" Class="d-flex gap-2">
                    <MudIcon Icon="@Icons.Material.Filled.Link" />
                    <MudText Typo="Typo.h6">Odkazy</MudText>
                </MudPaper>
                <MudPaper Elevation="0" Class="text-start">
                    @foreach (var media in SelectedMedium.Where(m => m is { MediaType: MediaType.URL }).ToList())
                    {
                        <MudLink Class="d-flex flex-column " Href="@media!.Path">@(string.IsNullOrEmpty(media.Name) ? media.Path[..Math.Min(media.Path.Length, 30)] : media.Name
                    )</MudLink>
                    }
                </MudPaper>
            </MudPaper>
        }
    </MudPaper>

    @* Popis *@
    @if (!string.IsNullOrEmpty(Activity.Description))
    {
        <MudPaper Elevation="0" Class="ma-2 border-1 rounded-3 pa-2" Style="min-height: max-content;width: calc(100%-20px);">
            <MudPaper Elevation="0" Class="d-flex gap-2 ">
                <MudIcon Icon="@Icons.Material.Filled.Description" />
                <MudText Typo="Typo.h6">Popis</MudText>
            </MudPaper>
            <MudPaper Elevation="0" Class="my-2 d-flex text-break text-wrap" Style="word-wrap: break-word;">
                <MudText Style="overflow-wrap: break-word;">@Activity.Description</MudText>
            </MudPaper>
        </MudPaper>
    }


    @*Obrazky a videa*@
    @if (SelectedMedium.Any(m=>m is {MediaType:MediaType.Image or MediaType.Video}))
    {
        <MudPaper Elevation="0" Class="d-inline-block my-1 border-1 rounded-3 ma-2 pa-2" Style="min-height: max-content;width: calc(100%-20px);">
            <MudPaper Elevation="0" Class="d-flex gap-2">
                <MudIcon Icon="@Icons.Material.Filled.Image" />
                <MudText Typo="Typo.h6">Obrázky, videa</MudText>
            </MudPaper>
            <MudPaper Elevation="0" Class="d-flex flex-wrap gap-2">
                @foreach (var media in SelectedMedium.Where(m => m is { MediaType: MediaType.Image } or { MediaType: MediaType.Video }).ToList())
                {
                    <div class="d-flex flex-column flex-column justify-center" style="height:100%">
                        <MudImage Width="200" Src="@(!string.IsNullOrEmpty(media!.Data)? media.Preview: Path.Combine(NavigationManager.BaseUri + Configuration.GetValue<string>("FileStorage")!, media.Path).Replace(@"\", "/" ))" ObjectFit="ObjectFit.Contain" Alt="@media.Name" />
                    </div>
                }
            </MudPaper>
    </MudPaper>
    }


@code {
    [Parameter]
    public ActivityDto Activity { get; set; } = null!;

    private IEnumerable<ActivityMediaDto?> SelectedMedium => Activity.ActivityMedium;
    private List<EquipmentDto?> SelectedEquipments => Activity.ActivityEquipments.Select(ae => ae.Equipment).OrderBy(e => e!.Name).ToList();
    private List<TagDto?> SelectedTags => Activity.ActivityTags.Select(ae => ae.Tag).OrderBy(t => t?.Name).ToList();
    

    private string Persons => StringExtensions.GetRangeString(Activity.PersonsMin, Activity.PersonsMax, "", Activity.GoaliesMin, Activity.GoaliesMax, " G", "-");
    private string Duration => StringExtensions.GetRangeString(Activity.DurationMin, Activity.DurationMax);
}
