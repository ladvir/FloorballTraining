@page "/editplace/{placeId:int}"
@using Environment = CoreBusiness.Enums.Environment
@inject IEditPlaceUseCase EditPlaceUseCase
@inject IDeletePlaceUseCase DeletePlaceUseCase

@inject IViewPlaceByIdUseCase ViewPlaceByIdUseCase

@inject NavigationManager NavigationManager

<FormHeaderComponent Title="Místo" Name=" _place?.Name" OnSubmit="Submit" OnCancel="Cancel" OnDelete="Delete" IsEditForm="true" />

<EditForm Model="@_place" OnValidSubmit="Submit">
    <DataAnnotationsValidator />
    <MudPaper Elevation="0" Class="d-inline-flex flex-wrap gap-4">
        <MudTextField Label="Název" @bind-Value="_place.Name" For="() => _place.Name" Style="width:22em;" />
        <MudTextField T="int" @bind-Value="_place.Length" Label="Délka" />
        <MudTextField T="int" @bind-Value="_place.Width" Label="Šířka" />
        <MudSelect T="Environment" Label="Prostředí" @bind-Value="@Environment" Text="@_place.Environment" Style="width:22em;">
            <MudSelectItem Value="Environment.Anywhere">Kdekoliv</MudSelectItem>
            <MudSelectItem Value="Environment.Indoor">Uvnitř</MudSelectItem>
            <MudSelectItem Value="Environment.Outdoor">Venku</MudSelectItem>
        </MudSelect>
    </MudPaper>
</EditForm>

@code {
    [Parameter]
    public int PlaceId { get; set; }

    private PlaceDto _place = new();

    private Environment Environment
    {
        get => string.IsNullOrEmpty(_place.Environment) ? Environment.Anywhere : (Environment)Enum.Parse(typeof(Environment), _place.Environment);
        set => _place.Environment = value.ToString();
    }

    protected override async Task OnParametersSetAsync()
    {
        _place = await ViewPlaceByIdUseCase.ExecuteAsync(PlaceId);
    }

    private async Task Submit()
    {
        await EditPlaceUseCase.ExecuteAsync(_place);
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/places");
    }

    private async Task Delete()
    {
        await DeletePlaceUseCase.ExecuteAsync(_place);

        NavigationManager.NavigateTo("/places");
    }

}
