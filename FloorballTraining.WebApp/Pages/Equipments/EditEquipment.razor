@page "/editequipment/{equipmentId:int}"
@inject IEditEquipmentUseCase EditEquipmentUseCase
@inject IDeleteEquipmentUseCase DeleteEquipmentUseCase
@inject IViewEquipmentByIdUseCase ViewEquipmentByIdUseCase

@inject NavigationManager NavigationManager

<FormHeaderComponent Title="Vybavení" Name=" _equipment?.Name" OnSubmit="Submit" OnCancel="Cancel" OnDelete="Delete" IsEditForm="true" />

@if (_equipment != null)
{
    <EditForm Model="@_equipment" OnValidSubmit="Submit">
        <DataAnnotationsValidator/>
        <MudTextField Label="Název" @bind-Value="_equipment.Name" For="() => _equipment.Name" />
    </EditForm>
}

@code {
    [Parameter]
    public int EquipmentId { get; set; }

    private EquipmentDto? _equipment;

    protected override async Task OnParametersSetAsync()
    {
        _equipment = await ViewEquipmentByIdUseCase.ExecuteAsync(EquipmentId);
    }
    
    private async Task Submit()
    {
        if (_equipment == null) return;
        await EditEquipmentUseCase.ExecuteAsync(_equipment);
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/equipments");
    }

    private async Task Delete()
    {
        if (_equipment == null) return;

        await DeleteEquipmentUseCase.ExecuteAsync(_equipment.Id);

        NavigationManager.NavigateTo("/equipments");
    }

}
