@inject NavigationManager NavigationManager
<MudPaper Elevation="10" Class="pa-2 justify-center" Style="border-2; ">
    <MudPaper Elevation="0">
        <MudLink OnClick="@(() => NavigateTo(LinkToList))" Underline="Underline.None" >
            <MudPaper Elevation="0" Class="pa-2" Style="text-align: center;">
            @if (ItemsCount == null)
            {
                <MudProgressCircular Color="Color.Warning" Size="Size.Large" Indeterminate="true"/>
            }
            else
            {
                    <MudBadge Color="Color.Error" Overlap="true" Bordered="true" Content="@ItemsCount" Class="ma-2" Style="clear: both;">
                    <MudText Typo="Typo.h5">@Title</MudText>
                </MudBadge>
            }
        </MudPaper>
    </MudLink>
    </MudPaper>
    @if (!string.IsNullOrEmpty(LinkToNew))
    {

        <MudPaper Elevation="0" Class="mx-auto">

        <MudButton Variant="Variant.Outlined" IconSize="Size.Medium" DropShadow="false" Color="Color.Success" StartIcon="@Icons.Material.Filled.Add" OnClick="@(() => NavigateTo(LinkToNew))">@TitleAdd</MudButton>

        </MudPaper>
    }
</MudPaper>


@code {

    [Parameter]
    public int? ItemsCount { get; set; }

    [Parameter]
    public string? Title { get; set; }

    [Parameter]
    public string? LinkToList { get; set; }

    [Parameter]
    public string? LinkToNew { get; set; }

    [Parameter]
    public string? TitleAdd { get; set; }

    private void NavigateTo(string? linkToList)
    {
        if (!string.IsNullOrEmpty(linkToList))
        {
            NavigationManager.NavigateTo(linkToList!);
        }
    }

}
