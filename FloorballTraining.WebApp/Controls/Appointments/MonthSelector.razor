@using System.Globalization

    <RadzenDropDown Data=@_months @bind-Value=@_selectedMonth TextProperty="@nameof(MonthInfo.MonthName)"  Name="DropDownMultipleChips"
                       Multiple=false AllowClear=true
                       Placeholder="Vyber měsíc..."
                    Chips=true Style="width: 100%; max-width: 400px;"
                       Change=@OnMonthSelectionChanged
    />

    @code {
    private List<MonthInfo> _months = [];
    private MonthInfo _selectedMonth = new();

    [Parameter]
    public EventCallback<MonthInfo> OnSelectionChanged { get; set; }

    public class MonthInfo
    {
        public int MonthNumber { get; set; }
        public string MonthName { get; set; } = string.Empty;
    }

    protected override void OnInitialized()
    {
        // Initialize the list of months
        _months = Enumerable.Range(1, 12)
            .Select(month => new MonthInfo
            {
                MonthNumber = month,
                MonthName = CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(month)
            })
            .ToList();

        _selectedMonth = new MonthInfo();
    }

    private async Task OnMonthSelectionChanged(object value)
    {
        await OnSelectionChanged.InvokeAsync(_selectedMonth);
    }

    // Public method to get selected months
    public MonthInfo GetSelectedMonth()
    {
        return _selectedMonth;
    }

    // Public method to set selected months
    public void SetSelectedMonths(int monthNumber)
    {
        _selectedMonth = (_months.Find(m => monthNumber==m.MonthNumber) ?? _months.Find(m=>m.MonthNumber==DateTime.Now.Month))!;
        StateHasChanged();
    }
}