@using FloorballTraining.CoreBusiness.Specifications
@using FloorballTraining.UseCases.Equipments.Interfaces
@inject NavigationManager NavigationManager
@inject IViewEquipmentsUseCase ViewEquipmentsUseCase

<MudTable Hover="true" FixedHeader="true"
          Items="@_equipments"
          Dense="true">
    <HeaderContent>
        <MudTh>Název</MudTh>
        <MudTh></MudTh>
    </HeaderContent>
    
        <RowTemplate>
            <MudTd DataLabel="Název">@context.Name</MudTd>
        <MudTd>
            <MudChip T="string" Icon="@Icons.Material.Filled.Edit" Variant="Variant.Outlined" Color="Color.Success" OnClick="@(()=>EditEquipment(context.Id))">Upravit</MudChip>
        </MudTd>
          
    </RowTemplate>
</MudTable>

@code { 
    [Parameter]
    public string SearchText { get; set; } = string.Empty;
    
    private List<EquipmentDto> _equipments = new();
    
    protected override async Task OnParametersSetAsync()
    {
        EquipmentSpecificationParameters parameters = new()
            {
                Name = SearchText
            };
            
        var equipments = await ViewEquipmentsUseCase.ExecuteAsync(parameters);

        if (equipments.Data == null || !equipments.Data.Any())
        {
            return;
        }

        _equipments = equipments.Data.ToList();
    }

    private void EditEquipment(int equipmentId)
    {
        NavigationManager.NavigateTo($"/editequipment/{equipmentId}");
    }
}
