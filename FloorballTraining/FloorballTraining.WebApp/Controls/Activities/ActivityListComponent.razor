
@inject IViewActivityByNameUseCase ViewActivityByNameUseCase
@inject NavigationManager NavigationManager

<MudTable Items="@_activities" FixedHeader="true" Height="800px">
    <HeaderContent>
        <MudTh Style="word-wrap: break-word; max-width: 200px;">Název</MudTh>
            <MudTh Style="word-wrap: break-word; max-width: 300px;">Popis</MudTh>
            <MudTh>Počet osob min.</MudTh>
            <MudTh>Počet osob max.</MudTh>
            <MudTh>Doba trvání min.</MudTh>
            <MudTh>Doba trvání max.</MudTh>
        <MudTh>Štítky</MudTh>
            <MudTh>Vybavení</MudTh>
            <MudTh></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Název" Style="word-wrap: break-word; max-width: 200px;">@context.Name</MudTd>
        <MudTd DataLabel="Popis" Style="word-wrap: break-word; max-width: 300px;">@context.Description</MudTd>
        <MudTd DataLabel="Počet osob min.">@context.PersonsMin</MudTd>
        <MudTd DataLabel="Počet osob max.">@context.PersonsMax</MudTd>
        <MudTd DataLabel="Doba trvání min.">@context.DurationMin</MudTd>
        <MudTd DataLabel="Doba trvání max.">@context.DurationMax</MudTd>
        <MudTd DataLabel="Štítky"><MudPaper Elevation="0">
            @foreach(var tag in @context.ActivityTags.Where(at=>at.Tag!=null).Select(t=>t.Tag)) {
                <MudText>@tag?.Name</MudText>
            }
        </MudPaper></MudTd>
        <MudTd DataLabel="Vybavení"><MudPaper Elevation="0">
            @foreach(var equipment in @context.ActivityEquipments.Where(ae=>ae.Equipment!=null).Select(e=>e.Equipment)) {
                <MudText>@equipment?.Name</MudText>
            }
        </MudPaper></MudTd>
        <MudTd DataLabel="">
            <MudIconButton Icon="@Icons.Material.Filled.Edit" Size="Size.Small" Color="Color.Success" OnClick="()=>EditActivity(context.ActivityId)" DisableElevation="true" Variant="Variant.Filled" />
        </MudTd>
    </RowTemplate>
</MudTable>


@code {
    private List<Activity> _activities = new List<Activity>();

    [Parameter]
    public string SearchText { get; set; } = string.Empty;

    protected override async Task OnParametersSetAsync()
    {
        _activities = (await ViewActivityByNameUseCase.ExecuteAsync(SearchText)).ToList();
    }

    private void EditActivity(int activityId)
    {
        NavigationManager.NavigateTo($"/editactivity/{activityId}");
    }
}
