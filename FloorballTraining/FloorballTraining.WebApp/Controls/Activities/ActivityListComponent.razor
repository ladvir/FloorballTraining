@using FloorballTraining.WebApp.Pages.Activities
@using FloorballTraining.UseCases

@inject NavigationManager NavigationManager
@inject IDialogService DialogService

<MudTable T="Activity" Items="@Activities" FixedHeader="true" Elevation="0" Hover="true" OnRowClick="RowClicked" Dense="true">
    <HeaderContent>
        <MudTh Style="inline-size: 200px;overflow-wrap: break-word;">Název</MudTh>
        <MudTh Style="max-inline-size: 300px;overflow-wrap: break-word;">Popis</MudTh>
        <MudTh>Počet osob min.</MudTh>
        <MudTh>Počet osob max.</MudTh>
        <MudTh>Doba trvání min.</MudTh>
        <MudTh>Doba trvání max.</MudTh>
        <MudTh Style="max-inline-size: 300px;overflow-wrap: break-word;">Štítky</MudTh>
        <MudTh Style="max-inline-size: 300px;overflow-wrap: break-word;">Vybavení</MudTh>
        <MudTh></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Název" Style="inline-size: 200px;overflow-wrap: break-word;">@context.Name</MudTd>
        <MudTd DataLabel="Popis" Style="max-inline-size: 300px;overflow-wrap: break-word;">@context.Description</MudTd>
        <MudTd DataLabel="Počet osob min.">@context.PersonsMin</MudTd>
        <MudTd DataLabel="Počet osob max.">@context.PersonsMax</MudTd>
        <MudTd DataLabel="Doba trvání min.">@context.DurationMin</MudTd>
        <MudTd DataLabel="Doba trvání max.">@context.DurationMax</MudTd>
        <MudTd DataLabel="Štítky" Style="max-inline-size: 300px;overflow-wrap: break-word;">@(GetTagList(context))</MudTd>
        <MudTd DataLabel="Vybavení" Style="max-inline-size: 300px;overflow-wrap: break-word;">@(GetEquipmentList(context))</MudTd>
        <MudTd DataLabel="">
            <MudChip Icon="@Icons.Material.Filled.Edit" Variant="Variant.Outlined" Color="Color.Success" OnClick="()=>EditActivity(context.ActivityId)">Upravit</MudChip>
        </MudTd>
    </RowTemplate>
</MudTable>


    @code {
    [Parameter]
    public IEnumerable<Activity> Activities { get; set; } = new List<Activity>();

    private void EditActivity(int activityId)
    {
        NavigationManager.NavigateTo($"/editactivity/{activityId}");
    }

    private string GetTagList(Activity context)
    {
        return string.Join(", ", context.ActivityTags.Where(at => at.Tag != null).Select(t => t.Tag).Select(t => t!.Name).OrderBy(n => n));
    }

    private string GetEquipmentList(Activity context)
    {
        return string.Join(", ", context.ActivityEquipments.Where(at => at.Equipment != null).Select(t => t.Equipment).Select(t => t!.Name).OrderBy(n=>n));
    }

    private void RowClicked(TableRowClickEventArgs<Activity> obj)
    {
        ShowDetail(obj.Item);
    }

    private void ShowDetail(Activity activity)
    {
        var options = new DialogOptions
        {
            NoHeader = false,
            CloseOnEscapeKey = false,
            CloseButton = true,
            DisableBackdropClick = true,
            Position = DialogPosition.Center,
            MaxWidth = MaxWidth.ExtraLarge,
            FullWidth = true,
            FullScreen = false,

        };
        var parameters = new DialogParameters { ["Activity"] = activity };

        //DialogService.Show<ActivityDetailReadOnly>(string.Empty, parameters, options);

    }


}
