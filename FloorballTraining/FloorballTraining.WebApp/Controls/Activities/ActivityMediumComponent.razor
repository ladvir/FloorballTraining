<MudPaper Elevation="0" Class="d-flex gap-2 my-2 flex-wrap">
    @foreach (var media in Medium)
    {
        var path = Path.Combine(StorageLocation, media.Path).Replace(@"\", "/");
        <MudCard>
            <MudCardHeader>
                <MudToolBar Dense="true">
                    <MudIconButton ButtonType="ButtonType.Button" OnClick="() => Delete(media)" Icon="@Icons.Material.Filled.Delete" />
                </MudToolBar>
            </MudCardHeader>
            <MudCardContent>
                <MudImage Src="@path" ObjectFit="ObjectFit.Contain" Width="200" Height="200" Alt="@path" />
            </MudCardContent>
        </MudCard>
    }
</MudPaper>

@code {
    [Parameter]
    public List<Media> Medium { get; set; } = new();

    [Parameter]
    public EventCallback<List<Media>?> MediumDeleted { get; set;}

    [Parameter]
    public string StorageLocation { get; set; } = string.Empty;


    private async Task Delete(Media media)
    {
        Medium.Remove(media);

        await MediumDeleted.InvokeAsync(Medium);
    }

    

}





    

