<MudPaper Elevation="0" Class="align-content-start my-2" Style="column-count: auto;column-width: 8rem;">
    @foreach (var possibleValue in _ageGroups)
    {
        <MudCheckBox T="bool" Color="Color.Success" Style="vertical-align: middle; word-wrap: break-word;" Dense="true" Checked="@SelectedValues.Contains(possibleValue)" CheckedChanged="@((isChecked) => CheckboxChanged(isChecked, possibleValue))"> @possibleValue.GetDescription()</MudCheckBox>
    }
</MudPaper>

@code {
    [Parameter]
    public List<AgeGroup> SelectedValues { get; set; } = new();

    [Parameter]
    public EventCallback<List<AgeGroup>> SelectedValuesChanged { get; set; }

    private List<AgeGroup> _ageGroups = Enum.GetValues(typeof(AgeGroup)).Cast<AgeGroup>().ToList();

    
    
    private async Task CheckboxChanged(bool isChecked, AgeGroup value)
    {
        if (isChecked)
        {
            SelectedValues.Add(value);
        }
        else
        {
            SelectedValues.Remove(value);
        }

        await SelectedValuesChanged.InvokeAsync(SelectedValues);
    }
}





    

