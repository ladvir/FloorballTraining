@inject NavigationManager NavigationManager
@inject IViewTagByNameUseCase ViewTagByNameUseCase

<MudTable Hover="true" FixedHeader="true"
          Items="@_tags"
          Virtualize="true"
          GroupBy="@_groupDefinition"
          Dense="true">
    <ColGroup>
        <col style="width: 60px;" />
        <col />
        <col />
    </ColGroup>
    <HeaderContent>
        <MudTh>Název</MudTh>
        <MudTh>Zaměření tréninku</MudTh>
        <MudTh>Náhled</MudTh>
        <MudTh></MudTh>
    </HeaderContent>
    <GroupHeaderTemplate>
        <MudTh Class="mud-table-cell-custom-group text-capitalize " Style="font-weight:bold;"colspan="3">@context.Key</MudTh>
        </GroupHeaderTemplate>

        <RowTemplate>
            <MudTd DataLabel="Název">@context.Name</MudTd>
            <MudTd DataLabel="Zaměření tréninku"><MudCheckBox T="bool" Size="Size.Small" Checked="@context.IsTrainingGoal" Disabled="true"/></MudTd>
            <MudTd DataLabel="Náhled"><MudChip Size="Size.Small" Text="@context.Name" Value="@context.TagId" Style="@($"background-color:{context.Color}; color:white;")" /></MudTd>
        <MudTd>
            <MudChip Icon="@Icons.Material.Filled.Edit" Variant="Variant.Outlined" Color="Color.Success" OnClick="@(()=>EditTag(context.TagId))">Upravit</MudChip>
        </MudTd>
          
    </RowTemplate>

</MudTable>



@code { 
    [Parameter]
    public string SearchText { get; set; } = string.Empty;
    
    private List<Tag> _tags = new List<Tag>();
    
    private TableGroupDefinition<Tag> _groupDefinition = new()
        {
            Indentation = true,
            Expandable = true,
            IsInitiallyExpanded = true,
            Selector = (e) => e.ParentTag?.Name
        };
        
    protected override async Task OnParametersSetAsync()
    {
        _tags = (await ViewTagByNameUseCase.ExecuteAsync(SearchText)).ToList();
    }

    private void EditTag(int tagId)
    {
        NavigationManager.NavigateTo($"/edittag/{tagId}");
    }
}
