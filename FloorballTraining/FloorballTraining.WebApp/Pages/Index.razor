@page "/"

@inject IViewTrainingByIdUseCase ViewTrainingByIdUseCase
@inject ISendActivityViaEmailUseCase SendActivityViaEmailUseCase



@if (_training== null)
{
    <MudPaper Class="align-center align-items-center mud-width-full" Elevation="0">
        <MudProgressCircular Color="Color.Warning" Size="Size.Large" Indeterminate="true" />
    </MudPaper>
}
else
{
<ExportToPdfTrainingComponent Training="_training"/>

    if (_training.TrainingParts != null && _training.TrainingParts.Any())
    {
        <ExportToPdfActivityComponent Activity="_training.TrainingParts.First().TrainingGroups.First().Activity!"/>
    }
}

<MudIconButton Icon="" OnClick="SendEmail">Poslat emailem</MudIconButton>


@code {
    private Training? _training;

    protected override async Task OnInitializedAsync()
    {
        _training = await ViewTrainingByIdUseCase.ExecuteAsync(1);
    }

    private async Task SendEmail()
    {
     
        await SendActivityViaEmailUseCase.ExecuteAsync(new List<int> { 1, 5, 3 }, new[] { "ladislav.virag@storaenso.com" });
    }

}