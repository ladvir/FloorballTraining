@page "/addtraining"
@inject IAddTrainingUseCase AddTrainingUseCase
@inject IViewTrainingEquipmentUseCase ViewTrainingEquipmentUseCase;
@inject NavigationManager NavigationManager

<MudText Typo="Typo.h4">Nový trénink</MudText>


<EditForm Model="@_training" OnValidSubmit="Submit">
    <FluentValidationValidator/>
    <ValidationSummary />
    <MudPaper Elevation="0" >
        @*Field*@
        <MudPaper Elevation="0" >
    
            <MudPaper Elevation="0" Class="d-inline-flex gap-4 flex-wrap align-center align-content-center">
            <MudTextField Label="Název" @bind-Value="_training.Name" Style="width:20vw;" />
            <MudPaper Elevation="0" Class="d-inline-flex gap-2 align-center">
                <MudText>Počet osob: </MudText>
                <MudText>@_training.PersonsMin</MudText>
                <MudText> - </MudText>
                <MudText>@_training.PersonsMax</MudText>
                <RangeSlider  @bind-ValueHigh="@_training.PersonsMax" @bind-ValueLow="@_training.PersonsMin" MinValue="1" MaxValue="50"/>
            </MudPaper>

            <MudPaper Elevation="0" Class="d-inline-flex gap-2 align-center align-content-center"> 
                <MudText>Doba trvání: </MudText>
                <MudText>@_training.Duration</MudText>
                <Slider @bind-Value="@_training.Duration" MinValue="1" MaxValue="30"/>
            </MudPaper>
            </MudPaper>

            <MudTextField Label="Popis" @bind-Value="_training.Description" Lines="6" Variant="Variant.Outlined" Margin="Margin.Dense" Class="my-5" />

            <MudTextField Label="Komentář před zahájením" @bind-Value="_training.CommentBefore" Lines="6" Variant="Variant.Outlined" Margin="Margin.Dense" Class="my-5" />
            <MudTextField Label="Komentář po ukončení" @bind-Value="_training.CommentAfter" Lines="6" Variant="Variant.Outlined" Margin="Margin.Dense" Class="my-5" />

            <MudExpansionPanels MultiExpansion="true" Dense="true">

                <MudPaper>
                    <MudPaper Elevation="0" Class="d-inline-flex gap-2" Width="100%">
                        <MudText Typo="Typo.h5">Tréninkové části</MudText>
                        <MudButton StartIcon="@Icons.Material.Filled.Add" Size="Size.Medium" Color="Color.Success" OnClick="AddTrainingPart" IconSize="Size.Medium" Variant="Variant.Outlined" />
                    </MudPaper>
                    

                    <MudExpansionPanel IsInitiallyExpanded="true">
                        @*TrainingParts*@
                        <TrainingPartsComponent TrainingParts="_training.TrainingParts" OnActivitiesChanged="OnActivitiesChanged"></TrainingPartsComponent>
                    </MudExpansionPanel>

                </MudPaper>
                
                <MudExpansionPanel IsInitiallyExpanded="true" Text="Vybavení" Class="my-4" Style="font-size: 2em; font-weight: bold;">

                    <ul>
                        @foreach (var equipment in _equipmentList)
                    {
                        <li>@equipment</li>
                    }
                    </ul>


                    <MudList>
                        @foreach (var equipment in _equipmentList)
                        {
                            <MudListItem>@equipment</MudListItem>
                        }
                    </MudList>
                </MudExpansionPanel>


            </MudExpansionPanels>

        </MudPaper>

    </MudPaper>
    
    @*Buttons*@
    <MudPaper Elevation="0" Class="d-inline-flex my-2">
        <MudButton ButtonType="ButtonType.Button" Variant="Variant.Filled" Color="Color.Primary" OnClick="Cancel">Cancel</MudButton>
        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" @onkeypress:preventDefault>OK</MudButton>
    </MudPaper>
</EditForm>


@code {
    private readonly Training _training = new();

    private List<string?> _equipmentList = new();

    private async Task Submit()
    {
        await AddTrainingUseCase.ExecuteAsync(_training);
        NavigationManager.NavigateTo("/trainings");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/trainings");
    }

    private void AddTrainingPart()
    {
        _training.TrainingParts.Add(new TrainingPart
        {
                Name = $"{_training.TrainingParts.Count + 1}",
                Order = _training.TrainingParts.Count + 1
        });
    }

    private void OnActivitiesChanged()
    {
        _equipmentList = _training.GetEquipment();
    }

}
