@page "/addactivity"
@using FloorballTraining.CoreBusiness
@using FloorballTraining.UseCases.Activities
@using FloorballTraining.WebApp.Extensions
@inject IAddActivityUseCase AddActivityUseCase
@inject NavigationManager NavigationManager

<MudText Typo="Typo.h4">Nová aktivita</MudText>


<EditForm Model="@_activity" OnValidSubmit="Submit">
    <DataAnnotationsValidator/>
    <MudPaper Elevation="0" Class="d-flex flex-wrap">
        @*Field*@
        <MudPaper Elevation="0" >
    
            <MudTextField Label="Název" @bind-Value="_activity.Name" For="() => _activity.Name" />
            <MudTextField Label="Popis" @bind-Value="_activity.Description" For="() => _activity.Description" Lines="6" Variant="Variant.Outlined" Margin="Margin.Dense" Class="my-5" />

            <MudPaper Elevation="0" Class="d-inline-flex gap-4">
                <MudPaper Elevation="0">
                    <MudText>Počet osob: @Persons</MudText>
                    <RangeSlider @bind-ValueHigh="@_activity.PersonsMax" @bind-ValueLow="@_activity.PersonsMin" MinValue="0" MaxValue="30"/>
                </MudPaper>

                <MudPaper Elevation="0">
                    <MudText>Doba trvání: @Duration</MudText>
                    <RangeSlider @bind-ValueHigh="@_activity.DurationMax" @bind-ValueLow="@_activity.DurationMin" MinValue="1" MaxValue="30"/>
                </MudPaper>
            </MudPaper>
        
            @*<MudPaper Class="d-flex flex-wrap my-2" MaxWidth="50vw" Width="50vw" Elevation="0" >
                <MudChipSet @bind-ref="_mudChipSet" AllClosable="true" OnClose="Remove">
                    @foreach (var tag in SelectedTags.OrderBy(t => t.ParentTagId))
                    {
                        <MudChip Value="@tag" Style="@($"background-color:{tag.Color}; color:white;font-size:0.8em;")" Variant="Variant.Text" Size="Size.Small">@tag.Name</MudChip>
                    }
                </MudChipSet>
            </MudPaper>*@
        
        </MudPaper>
        @*Tags *@
        @*<MudPaper Elevation="0" Class="align-stretch flex-grow-0 my-0" >*@
            <MudPaper Class="d-flex align-right justify-top pa-3 " Style="height: 60vh; overflow-y: auto;" Elevation="0">
                <TagsList Tags="_tags" SelectedValues="SelectedTags.Select(t=>t.TagId).ToList()" SelectedValuesChanged="Refresh" />
            </MudPaper>
        @*</MudPaper>*@
    </MudPaper>
    
    @*Buttons*@
    <MudPaper Elevation="0" Class="d-inline-flex my-2">
        <MudButton ButtonType="ButtonType.Button" Variant="Variant.Filled" Color="Color.Primary" OnClick="Cancel">Cancel</MudButton>
        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" @onkeypress:preventDefault>OK</MudButton>
    </MudPaper>
</EditForm>


@code {
    private readonly Activity _activity = new();
    private string Persons => StringExtensions.GetRangeString(_activity.PersonsMin.GetValueOrDefault(0), _activity.PersonsMax.GetValueOrDefault(0));
    private string Duration => StringExtensions.GetRangeString(_activity.DurationMin.GetValueOrDefault(0), _activity.DurationMax.GetValueOrDefault(0));


    private async Task Submit()
    {
        await AddActivityUseCase.ExecuteAsync(_activity);
        NavigationManager.NavigateTo("/activities");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/activities");
    }

}
