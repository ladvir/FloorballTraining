/* --- Base Styles & Layout --- */
body {
    font-family: Arial, sans-serif;
    display: flex;
    flex-direction: column;
    align-items: center;
    margin: 20px;
    user-select: none; /* Prevent text selection during drag */
}

#container {
    display: flex;
    gap: 20px;
    align-items: flex-start;
}

.sidebar {
    width: 150px;
    border: 1px solid #ccc;
    padding: 10px;
    height: 600px;
    overflow-y: auto;
    background-color: #f8f8f8;
    flex-shrink: 0;
}

.sidebar h3 {
    margin-top: 0;
    margin-bottom: 10px;
    text-align: center;
}

.sidebar-item-base {
    margin: 8px 5px;
    padding: 5px;
    background-color: lightgray;
    cursor: grab;
    word-break: break-word;
    border: 1px solid #bbb;
    border-radius: 4px;
    text-align: center;
}

.activity-item { }

.library-item {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.library-item svg {
    max-width: 80%;
    max-height: 40px;
    margin-bottom: 5px;
    pointer-events: none;
    background-color: white;
    border: 1px solid #ddd;
    padding: 2px;
}

.library-item .item-name {
    font-size: 12px;
    margin-bottom: 5px;
}

#drawing-area {
    border: 1px solid black;
    width: 800px;
    height: 600px;
    background-color: #f9f9f9;
    overflow: hidden;
    position: relative;
}

#svg-canvas {
    width: 100%;
    height: 100%;
    display: block;
}

.controls {
    margin-top: 15px;
    display: flex;
    gap: 10px;
    flex-wrap: wrap;
    justify-content: center;
}

.file-input {
    display: none;
}

button {
    padding: 8px 12px;
    cursor: pointer;
    border: 1px solid #ccc;
    background-color: #eee;
    border-radius: 4px;
}

button:hover {
    background-color: #ddd;
}

button.active-tool {
    background-color: #a0c4ff;
    border-color: #6b9eff;
    font-weight: bold;
}

.delete-btn {
    margin-top: 5px;
    font-size: 11px;
    padding: 2px 5px;
    background-color: #f8d7da;
    border: 1px solid #f5c6cb;
    border-radius: 3px;
    cursor: pointer;
    width: 80%;
}

.delete-btn:hover {
    background-color: #f1aeb5;
}

foreignObject svg {
    width: 100%;
    height: 100%;
}

/* --- Element and Handle Styles --- */
.canvas-element {
    /* Base cursor set by setActiveTool */
}

.canvas-element > .selected-outline {
    stroke: dodgerblue;
    stroke-width: 1.5px;
    stroke-dasharray: 4, 4;
    fill: none;
    pointer-events: none;
    vector-effect: non-scaling-stroke;
}

.resize-handle, .move-handle, .rotate-handle {
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.15s ease-in-out;
    vector-effect: non-scaling-stroke; /* Keep stroke width constant on zoom */
}

.canvas-element:hover > .resize-handle,
.canvas-element:hover > .move-handle,
.canvas-element:hover > .rotate-handle,
.canvas-element.selected > .resize-handle,
.canvas-element.selected > .move-handle,
.canvas-element.selected > .rotate-handle {
    opacity: 0.85;
    pointer-events: auto; /* Make handles clickable when visible */
}

.resize-handle {
    fill: cornflowerblue;
    stroke: black;
    stroke-width: 1px;
    /* cursor set by setActiveTool */
}

.move-handle {
    fill: cornflowerblue;
    stroke: black;
    stroke-width: 1px;
    cursor: move;
}

.rotate-handle {
    fill: mediumseagreen; /* Different color */
    stroke: black;
    stroke-width: 1px;
    cursor: pointer; /* Simple pointer for click */
}


/* --- ADDED: Ghost Element for Drag Preview --- */
#ghost-drag-preview {
    position: absolute; /* Position relative to the document/viewport */
    pointer-events: none; /* Ghost shouldn't interfere with drop targets */
    z-index: 1000; /* Ensure it's above other elements */
    opacity: 0.6; /* Semi-transparent */
    /* Contain the SVG properly */
    overflow: hidden;
    border: 1px dashed grey; /* Optional: visual indicator for the ghost bounds */
}

#ghost-drag-preview svg {
    display: block; /* Remove extra space below SVG */
    width: 100%;
    height: 100%;
    background-color: lightyellow; /* Match element background */
}

.canvas-element > .collision-indicator-rect {
    stroke: red;
    stroke-width: 1.5px;
    stroke-dasharray: 3, 3;
    fill: none;
    fill-opacity: 0;
    pointer-events: none;
    vector-effect: non-scaling-stroke;
    opacity: 0;
    transition: opacity 0.1s ease-in-out;
}
.canvas-element.collision-indicator > .collision-indicator-rect {
    opacity: 1;
}